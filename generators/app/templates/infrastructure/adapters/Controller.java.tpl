package <%= package %>;

import <%=pathModel%>.<%=model%>;
import <%=pathUseCase%>.<%=model%>UseCase;
import lombok.RequiredArgsConstructor;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

// Autogenerated <%=model%> Controller class.

@RestController
@RequestMapping("/<%=modelVarName%>s")
@RequiredArgsConstructor
public class <%=model%>Controller {

    private final <%=model%>UseCase <%=modelVarName%>UseCase;

    @GetMapping
    public ResponseEntity<?> getAll() {
        return ResponseEntity.status(HttpStatus.OK).body(<%=modelVarName%>UseCase.getAll());
    }

    @PostMapping
    public ResponseEntity<?> save(@RequestBody <%=model%> <%=modelVarName%>) {
        return ResponseEntity.status(HttpStatus.CREATED).body(<%=modelVarName%>UseCase.save(<%=modelVarName%>));
    }
    
    @GetMapping("/{id}")
    public ResponseEntity<?> getById(@PathVariable String id) {
        <%= model %> <%= modelVarName %> = <%= modelVarName %>UseCase.getById(id);
        return <%= modelVarName %> != null ?
            ResponseEntity.status(HttpStatus.OK).body(<%= modelVarName %>) :
            ResponseEntity.status(HttpStatus.NOT_FOUND).body("<%= model %> not found");
    }

    @PutMapping()
    public ResponseEntity<?> update(@RequestBody <%=model%> <%=modelVarName%>) {
        <%= model %> updated<%= model %> = <%= modelVarName %>UseCase.update(<%= modelVarName %>);
        return updated<%= model %> != null ?
            ResponseEntity.status(HttpStatus.OK).body(updated<%= model %>) :
            ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Invalid id");
    }

    @DeleteMapping("/{id}")
    public ResponseEntity<?> delete(@PathVariable String id) {
        return <%= modelVarName %>UseCase.delete(id) ?
            ResponseEntity.status(HttpStatus.OK).body("<%= model %> has been deleted") :
            ResponseEntity.status(HttpStatus.NOT_FOUND).body("<%= model %> not found");
    }
}
